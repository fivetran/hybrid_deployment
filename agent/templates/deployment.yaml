apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ if .Values.config.kubernetes_agent_deployment_name }}{{ .Values.config.kubernetes_agent_deployment_name }}{{ else }}{{ .Release.Name }}{{ end }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: hd-agent
    {{- include "hd.labels" . | nindent 4 }}

spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: hd-agent
      {{- include "hd.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: hd-agent
        {{- include "hd.labels" . | nindent 8 }}
      annotations:
        helm.fivetran.com/chart-version: "{{ .Chart.Version }}"
        {{- include "hd.annotations" (dict "Values" .Values "annotations" .Values.config.deployment_annotations) | nindent 8 }}
    spec:
      serviceAccountName: hd-agent-sa
      {{- if or .Values.agent.node_selector .Values.node_selector }}
      nodeSelector:
        {{- if .Values.agent.node_selector }}
        {{ toYaml .Values.agent.node_selector | nindent 8 }}
        {{- else if .Values.node_selector }}
        {{ toYaml .Values.node_selector | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- if or .Values.agent.tolerations .Values.tolerations }}
      tolerations:
        {{- if .Values.agent.tolerations }}
        {{ toYaml .Values.agent.tolerations | nindent 8 }}
        {{- else if .Values.tolerations }}
        {{ toYaml .Values.tolerations | nindent 8 }}
        {{- end }}
      {{- end }}
      restartPolicy: Always
      containers:
        - name: hd-agent
          image: {{ if .Values.agent.image }}{{ .Values.agent.image }}{{ else }}{{ .Values.image }}{{ end }}
          imagePullPolicy: {{ if .Values.agent.image_pull_policy }}{{ .Values.agent.image_pull_policy }}{{ else }}{{ .Values.image_pull_policy }}{{ end }}
          resources:
            {{- if .Values.agent.resources }}{{ toYaml .Values.agent.resources | nindent 12 }}{{ else }}
            requests:
              cpu: 2
              memory: 2Gi
            limits:
              cpu: 2
              memory: 2Gi
            {{- end }}
          ports:
            - containerPort: 8090
          livenessProbe:
            httpGet:
              path: /healthz/alive
              port: 8090
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /healthz/ready
              port: 8090
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 10
          env:
            - name: container_env_type
              value: KUBERNETES
            - name: profile
              value: {{ .Values.config.profile | default "kubernetes" }}
            - name: namespace
              value: {{ .Release.Namespace }}
            - name: release_name
              value: {{ .Release.Name }}
            - name: release_version
              value: {{ .Chart.Version }}
            {{ if .Values.config.token }}
            - name: token
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.config.kubernetes_agent_deployment_name }}{{ .Values.config.kubernetes_agent_deployment_name }}{{ else }}{{ .Release.Name }}{{ end }}-token-secret
                  key: token
            {{ else if .Values.config.token_secret_name }}
            - name: token
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.token_secret_name }}
                  key: {{ if .Values.config.token_secret_key }}{{ .Values.config.token_secret_key }}{{ else }}token{{ end }}
            {{ end }}
          envFrom:
            - configMapRef:
                name: hd-agent-config
