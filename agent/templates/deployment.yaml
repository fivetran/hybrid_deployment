apiVersion: apps/v1
kind: Deployment
{{- include "hd.metadata" (dict
      "Values" .Values
      "Release" .Release
      "name" "hd-agent"
      "labels" .Values.config.deployment_labels
      "annotations" .Values.config.deployment_annotations) | nindent 0 }}

spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: hd-agent
      {{- include "hd.required.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: hd-agent
        {{- include "hd.labels" . | nindent 8 }}
      annotations:
        {{- include "hd.annotations" (dict "Values" .Values "annotations" .Values.config.deployment_annotations) | nindent 8 }}
    spec:
      serviceAccountName: hd-agent-sa
      nodeSelector:
        {{- toYaml $.Values.node_selector | nindent 8 }}
      tolerations:
        {{- toYaml $.Values.tolerations | nindent 8 }}
      restartPolicy: Always
      containers:
        - name: hd-agent
          image: {{ .Values.image }}
          imagePullPolicy: {{ .Values.image_pull_policy }}
          resources:
            {{- toYaml .Values.agent.resources | nindent 12 }}
          ports:
            - containerPort: 8090
          livenessProbe:
            httpGet:
              path: /healthz/alive
              port: 8090
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /healthz/ready
              port: 8090
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 10
          env:
            - name: container_env_type
              value: KUBERNETES
            - name: profile
              value: kubernetes
            - name: namespace
              value: {{ .Release.Namespace }}
            - name: release_name
              value: {{ .Release.Name }}
          envFrom:
            - configMapRef:
                name: hd-agent-config
